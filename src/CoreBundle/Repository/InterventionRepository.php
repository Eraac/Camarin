<?php

namespace CoreBundle\Repository;

use CoreBundle\Entity\Enterprise;

/**
 * InterventionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InterventionRepository extends \Doctrine\ORM\EntityRepository
{
    public function findAllParent()
    {
        $qb = $this->createQueryBuilder('i')
                    ->leftJoin('i.child', 'c')
                    ->addSelect('c')
                    ->where('i.parent IS NULL');

        return $qb->getQuery()->getResult();
    }

    public function findByEnterprise(Enterprise $enterprise)
    {
        $qb = $this->createQueryBuilder('i')
            ->leftJoin('i.child', 'c')
            ->addSelect('c')
            ->where('i.parent IS NULL')
            ->andWhere('i.enterprise = :enterprise')
            ->setParameter('enterprise', $enterprise);

        return $qb->getQuery()->getResult();
    }

    public function getOrphelinIntervention(Enterprise $enterprise)
    {
        $qb = $this->createQueryBuilder('i')
                    ->where('i.enterprise = :enterprise')
                    ->andWhere('i.plan IS NULL')
                    ->setParameter('enterprise', $enterprise)
                    ->orderBy('i.createdAt', 'ASC');

        return $qb->getQuery()->getResult();
    }

    public function lastInterventionByEnterprise(Enterprise $enterprise, $limit)
    {
        $qb = $this->createQueryBuilder('i')
                    ->where('i.enterprise = :enterprise')
                    ->andWhere('i.parent IS NULL')
                    ->setParameter('enterprise', $enterprise)
                    ->orderBy('i.date', 'DESC')
                    ->setMaxResults($limit);

        return $qb->getQuery()->getResult();
    }

    public function findOrphan()
    {
        $qb = $this->createQueryBuilder('i')
            ->where('i.plan IS NULL')
            ->orderBy('i.date', 'DESC');

        return $qb->getQuery()->getResult();
    }

    public function findOrphanByEnterprise(Enterprise $enterprise)
    {
        $qb = $this->createQueryBuilder('i')
                    ->where('i.enterprise = :enterprise')
                    ->andWhere('i.plan IS NULL')
                    ->setParameter('enterprise', $enterprise)
                    ->orderBy('i.date', 'DESC');

        return $qb->getQuery()->getResult();
    }
}
